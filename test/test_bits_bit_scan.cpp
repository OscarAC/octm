#include <stdint.h>

import octm;

void test_bsf_constexpr()
{
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000000) == -1);
   static_assert(bit_scan_forward((uint64_t)0b0000000000011100000000000000000100000000000000000000000000000001) == 0);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000001000000000000000000000000000000010) == 1);
   static_assert(bit_scan_forward((uint64_t)0b0000001100000000000011000000010000000000000000000000000000000100) == 2);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000100000000000000000000000000000001000) == 3);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000001000000000000000000000000000000010000) == 4);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000110000010000000000000000000000000000000100000) == 5);
   static_assert(bit_scan_forward((uint64_t)0b0000000000100000000000000100000000000000000000000000000001000000) == 6);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000100001000000000000000000000000000000010000000) == 7);
   static_assert(bit_scan_forward((uint64_t)0b0000000000110000000000010000000000000000000000000000000100000000) == 8);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000100000100000000000000000000000000000001000000000) == 9);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000010000000000) == 10);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000100000000000) == 11);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000010000000000000000000000000000001000000000000) == 12);
   static_assert(bit_scan_forward((uint64_t)0b0000001000110000000100000000000000000000000000000010000000000000) == 13);
   static_assert(bit_scan_forward((uint64_t)0b0000000000010000001000000000000000000000000000000100000000000000) == 14);
   static_assert(bit_scan_forward((uint64_t)0b0000001000000000010000000000000000000000000000001000000000000000) == 15);
   static_assert(bit_scan_forward((uint64_t)0b0001000000000000100000000000000000000000000000010000000000000000) == 16);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000001000000000000000000000000000000100000000000000000) == 17);
   static_assert(bit_scan_forward((uint64_t)0b0000000000010010000000000000000000000000000001000000000000000000) == 18);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000010000000000000000000) == 19);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000100000000000000000000) == 20);
   static_assert(bit_scan_forward((uint64_t)0b0000000000001000000000000000000000000000001000000000000000000000) == 21);
   static_assert(bit_scan_forward((uint64_t)0b0000000000010000000000000000000000000000010000000000000000000000) == 22);
   static_assert(bit_scan_forward((uint64_t)0b0000000000100000000000000000000000000000100000000000000000000000) == 23);
   static_assert(bit_scan_forward((uint64_t)0b0000000001000000000000000000000000000001000000000000000000000000) == 24);
   static_assert(bit_scan_forward((uint64_t)0b0000000010000000000000000000000000000010000000000000000000000000) == 25);
   static_assert(bit_scan_forward((uint64_t)0b0000000100000000000000000000000000000100000000000000000000000000) == 26);
   static_assert(bit_scan_forward((uint64_t)0b0000001000000000000000000000000000001000000000000000000000000000) == 27);
   static_assert(bit_scan_forward((uint64_t)0b0000010000000000000000000000000000010000000000000000000000000000) == 28);
   static_assert(bit_scan_forward((uint64_t)0b0000100000000000000000000000000000100000000000000000000000000000) == 29);
   static_assert(bit_scan_forward((uint64_t)0b0001000000000000000000000000000001000000000000000000000000000000) == 30);
   static_assert(bit_scan_forward((uint64_t)0b0010000000000000000000000000000010000000000000000000000000000000) == 31);
   static_assert(bit_scan_forward((uint64_t)0b0000000000011100000000000000000100000000000000000000000000000000) == 32);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000001000000000000000000000000000000000) == 33);
   static_assert(bit_scan_forward((uint64_t)0b0000001100000000000011000000010000000000000000000000000000000000) == 34);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000100000000000000000000000000000000000) == 35);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000001000000000000000000000000000000000000) == 36);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000110000010000000000000000000000000000000000000) == 37);
   static_assert(bit_scan_forward((uint64_t)0b0000000000100000000000000100000000000000000000000000000000000000) == 38);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000100001000000000000000000000000000000000000000) == 39);
   static_assert(bit_scan_forward((uint64_t)0b0000000000110000000000010000000000000000000000000000000000000000) == 40);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000100000100000000000000000000000000000000000000000) == 41);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000000000000000) == 42);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000000000010000000000000000000000000000000000000000000) == 43);
   static_assert(bit_scan_forward((uint64_t)0b0000001000110000000100000000000000000000000000000000000000000000) == 44);
   static_assert(bit_scan_forward((uint64_t)0b0000000000010000001000000000000000000000000000000000000000000000) == 45);
   static_assert(bit_scan_forward((uint64_t)0b0000001000000000010000000000000000000000000000000000000000000000) == 46);
   static_assert(bit_scan_forward((uint64_t)0b0001000000000000100000000000000000000000000000000000000000000000) == 47);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000001000000000000000000000000000000000000000000000000) == 48);
   static_assert(bit_scan_forward((uint64_t)0b0000000000010010000000000000000000000000000000000000000000000000) == 49);
   static_assert(bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000000000000000000000000) == 50);
   static_assert(bit_scan_forward((uint64_t)0b0000000000001000000000000000000000000000000000000000000000000000) == 51);
   static_assert(bit_scan_forward((uint64_t)0b0000000000010000000000000000000000000000000000000000000000000000) == 52);
   static_assert(bit_scan_forward((uint64_t)0b0000000000100000000000000000000000000000000000000000000000000000) == 53);
   static_assert(bit_scan_forward((uint64_t)0b0000000001000000000000000000000000000000000000000000000000000000) == 54);
   static_assert(bit_scan_forward((uint64_t)0b0000000010000000000000000000000000000000000000000000000000000000) == 55);
   static_assert(bit_scan_forward((uint64_t)0b0000000100000000000000000000000000000000000000000000000000000000) == 56);
   static_assert(bit_scan_forward((uint64_t)0b0000001000000000000000000000000000000000000000000000000000000000) == 57);
   static_assert(bit_scan_forward((uint64_t)0b0000010000000000000000000000000000000000000000000000000000000000) == 58);
   static_assert(bit_scan_forward((uint64_t)0b0000100000000000000000000000000000000000000000000000000000000000) == 59);
   static_assert(bit_scan_forward((uint64_t)0b0001000000000000000000000000000000000000000000000000000000000000) == 60);
   static_assert(bit_scan_forward((uint64_t)0b0010000000000000000000000000000000000000000000000000000000000000) == 61);
   static_assert(bit_scan_forward((uint64_t)0b0100000000000000000000000000000000000000000000000000000000000000) == 62);
   static_assert(bit_scan_forward((uint64_t)0b1000000000000000000000000000000000000000000000000000000000000000) == 63);
}

void test_bsf() 
{
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000000) == -1);
  test_assert(bit_scan_forward((uint64_t)0b0000000000011100000000000000000100000000000000000000000000000001) == 0);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000001000000000000000000000000000000010) == 1);
  test_assert(bit_scan_forward((uint64_t)0b0000001100000000000011000000010000000000000000000000000000000100) == 2);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000100000000000000000000000000000001000) == 3);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000001000000000000000000000000000000010000) == 4);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000110000010000000000000000000000000000000100000) == 5);
  test_assert(bit_scan_forward((uint64_t)0b0000000000100000000000000100000000000000000000000000000001000000) == 6);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000100001000000000000000000000000000000010000000) == 7);
  test_assert(bit_scan_forward((uint64_t)0b0000000000110000000000010000000000000000000000000000000100000000) == 8);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000100000100000000000000000000000000000001000000000) == 9);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000010000000000) == 10);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000100000000000) == 11);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000010000000000000000000000000000001000000000000) == 12);
  test_assert(bit_scan_forward((uint64_t)0b0000001000110000000100000000000000000000000000000010000000000000) == 13);
  test_assert(bit_scan_forward((uint64_t)0b0000000000010000001000000000000000000000000000000100000000000000) == 14);
  test_assert(bit_scan_forward((uint64_t)0b0000001000000000010000000000000000000000000000001000000000000000) == 15);
  test_assert(bit_scan_forward((uint64_t)0b0001000000000000100000000000000000000000000000010000000000000000) == 16);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000001000000000000000000000000000000100000000000000000) == 17);
  test_assert(bit_scan_forward((uint64_t)0b0000000000010010000000000000000000000000000001000000000000000000) == 18);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000010000000000000000000) == 19);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000100000000000000000000) == 20);
  test_assert(bit_scan_forward((uint64_t)0b0000000000001000000000000000000000000000001000000000000000000000) == 21);
  test_assert(bit_scan_forward((uint64_t)0b0000000000010000000000000000000000000000010000000000000000000000) == 22);
  test_assert(bit_scan_forward((uint64_t)0b0000000000100000000000000000000000000000100000000000000000000000) == 23);
  test_assert(bit_scan_forward((uint64_t)0b0000000001000000000000000000000000000001000000000000000000000000) == 24);
  test_assert(bit_scan_forward((uint64_t)0b0000000010000000000000000000000000000010000000000000000000000000) == 25);
  test_assert(bit_scan_forward((uint64_t)0b0000000100000000000000000000000000000100000000000000000000000000) == 26);
  test_assert(bit_scan_forward((uint64_t)0b0000001000000000000000000000000000001000000000000000000000000000) == 27);
  test_assert(bit_scan_forward((uint64_t)0b0000010000000000000000000000000000010000000000000000000000000000) == 28);
  test_assert(bit_scan_forward((uint64_t)0b0000100000000000000000000000000000100000000000000000000000000000) == 29);
  test_assert(bit_scan_forward((uint64_t)0b0001000000000000000000000000000001000000000000000000000000000000) == 30);
  test_assert(bit_scan_forward((uint64_t)0b0010000000000000000000000000000010000000000000000000000000000000) == 31);
  test_assert(bit_scan_forward((uint64_t)0b0000000000011100000000000000000100000000000000000000000000000000) == 32);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000001000000000000000000000000000000000) == 33);
  test_assert(bit_scan_forward((uint64_t)0b0000001100000000000011000000010000000000000000000000000000000000) == 34);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000000100000000000000000000000000000000000) == 35);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000000000001000000000000000000000000000000000000) == 36);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000110000010000000000000000000000000000000000000) == 37);
  test_assert(bit_scan_forward((uint64_t)0b0000000000100000000000000100000000000000000000000000000000000000) == 38);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000100001000000000000000000000000000000000000000) == 39);
  test_assert(bit_scan_forward((uint64_t)0b0000000000110000000000010000000000000000000000000000000000000000) == 40);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000100000100000000000000000000000000000000000000000) == 41);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000000000000000) == 42);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000000000010000000000000000000000000000000000000000000) == 43);
  test_assert(bit_scan_forward((uint64_t)0b0000001000110000000100000000000000000000000000000000000000000000) == 44);
  test_assert(bit_scan_forward((uint64_t)0b0000000000010000001000000000000000000000000000000000000000000000) == 45);
  test_assert(bit_scan_forward((uint64_t)0b0000001000000000010000000000000000000000000000000000000000000000) == 46);
  test_assert(bit_scan_forward((uint64_t)0b0001000000000000100000000000000000000000000000000000000000000000) == 47);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000001000000000000000000000000000000000000000000000000) == 48);
  test_assert(bit_scan_forward((uint64_t)0b0000000000010010000000000000000000000000000000000000000000000000) == 49);
  test_assert(bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000000000000000000000000) == 50);
  test_assert(bit_scan_forward((uint64_t)0b0000000000001000000000000000000000000000000000000000000000000000) == 51);
  test_assert(bit_scan_forward((uint64_t)0b0000000000010000000000000000000000000000000000000000000000000000) == 52);
  test_assert(bit_scan_forward((uint64_t)0b0000000000100000000000000000000000000000000000000000000000000000) == 53);
  test_assert(bit_scan_forward((uint64_t)0b0000000001000000000000000000000000000000000000000000000000000000) == 54);
  test_assert(bit_scan_forward((uint64_t)0b0000000010000000000000000000000000000000000000000000000000000000) == 55);
  test_assert(bit_scan_forward((uint64_t)0b0000000100000000000000000000000000000000000000000000000000000000) == 56);
  test_assert(bit_scan_forward((uint64_t)0b0000001000000000000000000000000000000000000000000000000000000000) == 57);
  test_assert(bit_scan_forward((uint64_t)0b0000010000000000000000000000000000000000000000000000000000000000) == 58);
  test_assert(bit_scan_forward((uint64_t)0b0000100000000000000000000000000000000000000000000000000000000000) == 59);
  test_assert(bit_scan_forward((uint64_t)0b0001000000000000000000000000000000000000000000000000000000000000) == 60);
  test_assert(bit_scan_forward((uint64_t)0b0010000000000000000000000000000000000000000000000000000000000000) == 61);
  test_assert(bit_scan_forward((uint64_t)0b0100000000000000000000000000000000000000000000000000000000000000) == 62);
  test_assert(bit_scan_forward((uint64_t)0b1000000000000000000000000000000000000000000000000000000000000000) == 63);
}

void test_bsr_constexpr()
{
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000000) == -1);
  static_assert(bit_scan_reverse((uint64_t)0b1000000000000000000000000000000000000000000000000000000000000000) == 63);
  static_assert(bit_scan_reverse((uint64_t)0b0100000000000000001000000000000000000000000000000000000000000000) == 62);
  static_assert(bit_scan_reverse((uint64_t)0b0010000000000000000100000000000000000000000000000000000000000000) == 61);
  static_assert(bit_scan_reverse((uint64_t)0b0001000000000000000001110000000000000000000100000000000000000000) == 60);
  static_assert(bit_scan_reverse((uint64_t)0b0000100000000000000000000011100000000000001000000000000000000000) == 59);
  static_assert(bit_scan_reverse((uint64_t)0b0000010000000000000000000000001100000000000000000000000000000000) == 58);
  static_assert(bit_scan_reverse((uint64_t)0b0000001000000000000000000000001100000000000100000000000000000000) == 57);
  static_assert(bit_scan_reverse((uint64_t)0b0000000100000000000000000000000000000000000000000000000000000000) == 56);
  static_assert(bit_scan_reverse((uint64_t)0b0000000010000000000000000000000000000000000100000000000000000000) == 55);
  static_assert(bit_scan_reverse((uint64_t)0b0000000001000000000000000000000000000000000000000000000000000001) == 54);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000100000000000000000000000000000000000000000000001000100) == 53);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000010000000000000000000000000000000000000000100000000000) == 52);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000001000000000000000000000000011000000000000000000000000) == 51);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000100000000000000000000000000000000000000000000000111) == 50);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000010000000000000000000000000100000000000000000000000) == 49);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000001000000000000000000000000000000000000000000001000) == 48);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000100000000000000000000001101000000000000000000000) == 47);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000010000000000000000000000001000000000000000000000) == 46);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000001000000000000000000000000001000000000000000000) == 45);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000100000000000000000100000000000000000000000000) == 44);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000010000000000000100000000000000000000000000000) == 43);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000001000000000000000000000000010000000000000000) == 42);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000100000000000000000000000000000100000000000) == 41);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000010000000000000000000000000000000010000000) == 40);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000001000000000000000000000000000001010000000) == 39);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000100000000000000000000000000100000000000) == 38);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000010000000000000000010001000000000000000) == 37);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000001000000000000000010100000000000100000) == 36);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000100000000001000000000000000000001100) == 35);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000010000000001000000000000000000000000) == 34);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000001000000000000100000000000000000000) == 33);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000100000000000000100000000000000000) == 32);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000010000000000000000100000000000000) == 31);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000001000000000010000000000000000000) == 30);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000100000000011010000000000000000) == 29);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000010000000000000000000000000000) == 28);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000001000000000000010001000000000) == 27);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000100000000000000010000000000) == 26);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000010000000001100001000000000) == 25);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000001000000000000000000010000) == 24);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000100000000100010000000000) == 23);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000010000000000000000000010) == 22);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000001000000000000000110000) == 21);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000100000000000001000000) == 20);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000010000000010000000000) == 19);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000001000000000010000000) == 18);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000100000000000001000) == 17);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000010000000000000100) == 16);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000001000000000100000) == 15);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000100000010000000) == 14);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000010000000000000) == 13);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000001000000010100) == 12);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000100001000000) == 11);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000010000100000) == 10);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000001000000100) == 9);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000100000001) == 8);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000010000010) == 7);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000001010000) == 6);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000101000) == 5);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000011000) == 4);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000001000) == 3);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000100) == 2);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000010) == 1);
  static_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000001) == 0);
}

void test_bsr()
{
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000000) == -1);
  test_assert(bit_scan_reverse((uint64_t)0b1000000000000000000000000000000000000000000000000000000000000000) == 63);
  test_assert(bit_scan_reverse((uint64_t)0b0100000000000000001000000000000000000000000000000000000000000000) == 62);
  test_assert(bit_scan_reverse((uint64_t)0b0010000000000000000100000000000000000000000000000000000000000000) == 61);
  test_assert(bit_scan_reverse((uint64_t)0b0001000000000000000001110000000000000000000100000000000000000000) == 60);
  test_assert(bit_scan_reverse((uint64_t)0b0000100000000000000000000011100000000000001000000000000000000000) == 59);
  test_assert(bit_scan_reverse((uint64_t)0b0000010000000000000000000000001100000000000000000000000000000000) == 58);
  test_assert(bit_scan_reverse((uint64_t)0b0000001000000000000000000000001100000000000100000000000000000000) == 57);
  test_assert(bit_scan_reverse((uint64_t)0b0000000100000000000000000000000000000000000000000000000000000000) == 56);
  test_assert(bit_scan_reverse((uint64_t)0b0000000010000000000000000000000000000000000100000000000000000000) == 55);
  test_assert(bit_scan_reverse((uint64_t)0b0000000001000000000000000000000000000000000000000000000000000001) == 54);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000100000000000000000000000000000000000000000000001000100) == 53);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000010000000000000000000000000000000000000000100000000000) == 52);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000001000000000000000000000000011000000000000000000000000) == 51);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000100000000000000000000000000000000000000000000000111) == 50);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000010000000000000000000000000100000000000000000000000) == 49);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000001000000000000000000000000000000000000000000001000) == 48);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000100000000000000000000001101000000000000000000000) == 47);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000010000000000000000000000001000000000000000000000) == 46);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000001000000000000000000000000001000000000000000000) == 45);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000100000000000000000100000000000000000000000000) == 44);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000010000000000000100000000000000000000000000000) == 43);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000001000000000000000000000000010000000000000000) == 42);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000100000000000000000000000000000100000000000) == 41);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000010000000000000000000000000000000010000000) == 40);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000001000000000000000000000000000001010000000) == 39);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000100000000000000000000000000100000000000) == 38);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000010000000000000000010001000000000000000) == 37);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000001000000000000000010100000000000100000) == 36);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000100000000001000000000000000000001100) == 35);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000010000000001000000000000000000000000) == 34);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000001000000000000100000000000000000000) == 33);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000100000000000000100000000000000000) == 32);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000010000000000000000100000000000000) == 31);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000001000000000010000000000000000000) == 30);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000100000000011010000000000000000) == 29);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000010000000000000000000000000000) == 28);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000001000000000000010001000000000) == 27);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000100000000000000010000000000) == 26);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000010000000001100001000000000) == 25);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000001000000000000000000010000) == 24);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000100000000100010000000000) == 23);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000010000000000000000000010) == 22);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000001000000000000000110000) == 21);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000100000000000001000000) == 20);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000010000000010000000000) == 19);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000001000000000010000000) == 18);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000100000000000001000) == 17);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000010000000000000100) == 16);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000001000000000100000) == 15);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000100000010000000) == 14);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000010000000000000) == 13);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000001000000010100) == 12);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000100001000000) == 11);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000010000100000) == 10);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000001000000100) == 9);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000100000001) == 8);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000010000010) == 7);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000001010000) == 6);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000101000) == 5);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000011000) == 4);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000001000) == 3);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000100) == 2);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000010) == 1);
  test_assert(bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000001) == 0);
}

void test_bsf_x64()
{
#ifdef TEST_X64_ASM
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000000) == -1);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000011100000000000000000100000000000000000000000000000001) == 0);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000000000000001000000000000000000000000000000010) == 1);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000001100000000000011000000010000000000000000000000000000000100) == 2);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000000000000100000000000000000000000000000001000) == 3);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000000000001000000000000000000000000000000010000) == 4);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000110000010000000000000000000000000000000100000) == 5);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000100000000000000100000000000000000000000000000001000000) == 6);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000100001000000000000000000000000000000010000000) == 7);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000110000000000010000000000000000000000000000000100000000) == 8);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000100000100000000000000000000000000000001000000000) == 9);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000010000000000) == 10);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000100000000000) == 11);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000010000000000000000000000000000001000000000000) == 12);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000001000110000000100000000000000000000000000000010000000000000) == 13);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000010000001000000000000000000000000000000100000000000000) == 14);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000001000000000010000000000000000000000000000001000000000000000) == 15);
  test_assert(x64::bit_scan_forward((uint64_t)0b0001000000000000100000000000000000000000000000010000000000000000) == 16);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000001000000000000000000000000000000100000000000000000) == 17);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000010010000000000000000000000000000001000000000000000000) == 18);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000010000000000000000000) == 19);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000100000000000000000000) == 20);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000001000000000000000000000000000001000000000000000000000) == 21);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000010000000000000000000000000000010000000000000000000000) == 22);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000100000000000000000000000000000100000000000000000000000) == 23);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000001000000000000000000000000000001000000000000000000000000) == 24);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000010000000000000000000000000000010000000000000000000000000) == 25);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000100000000000000000000000000000100000000000000000000000000) == 26);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000001000000000000000000000000000001000000000000000000000000000) == 27);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000010000000000000000000000000000010000000000000000000000000000) == 28);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000100000000000000000000000000000100000000000000000000000000000) == 29);
  test_assert(x64::bit_scan_forward((uint64_t)0b0001000000000000000000000000000001000000000000000000000000000000) == 30);
  test_assert(x64::bit_scan_forward((uint64_t)0b0010000000000000000000000000000010000000000000000000000000000000) == 31);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000011100000000000000000100000000000000000000000000000000) == 32);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000000000000001000000000000000000000000000000000) == 33);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000001100000000000011000000010000000000000000000000000000000000) == 34);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000000000000100000000000000000000000000000000000) == 35);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000000000001000000000000000000000000000000000000) == 36);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000110000010000000000000000000000000000000000000) == 37);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000100000000000000100000000000000000000000000000000000000) == 38);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000100001000000000000000000000000000000000000000) == 39);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000110000000000010000000000000000000000000000000000000000) == 40);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000100000100000000000000000000000000000000000000000) == 41);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000001000000000000000000000000000000000000000000) == 42);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000000000010000000000000000000000000000000000000000000) == 43);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000001000110000000100000000000000000000000000000000000000000000) == 44);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000010000001000000000000000000000000000000000000000000000) == 45);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000001000000000010000000000000000000000000000000000000000000000) == 46);
  test_assert(x64::bit_scan_forward((uint64_t)0b0001000000000000100000000000000000000000000000000000000000000000) == 47);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000001000000000000000000000000000000000000000000000000) == 48);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000010010000000000000000000000000000000000000000000000000) == 49);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000000100000000000000000000000000000000000000000000000000) == 50);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000001000000000000000000000000000000000000000000000000000) == 51);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000010000000000000000000000000000000000000000000000000000) == 52);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000000100000000000000000000000000000000000000000000000000000) == 53);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000001000000000000000000000000000000000000000000000000000000) == 54);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000010000000000000000000000000000000000000000000000000000000) == 55);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000000100000000000000000000000000000000000000000000000000000000) == 56);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000001000000000000000000000000000000000000000000000000000000000) == 57);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000010000000000000000000000000000000000000000000000000000000000) == 58);
  test_assert(x64::bit_scan_forward((uint64_t)0b0000100000000000000000000000000000000000000000000000000000000000) == 59);
  test_assert(x64::bit_scan_forward((uint64_t)0b0001000000000000000000000000000000000000000000000000000000000000) == 60);
  test_assert(x64::bit_scan_forward((uint64_t)0b0010000000000000000000000000000000000000000000000000000000000000) == 61);
  test_assert(x64::bit_scan_forward((uint64_t)0b0100000000000000000000000000000000000000000000000000000000000000) == 62);
  test_assert(x64::bit_scan_forward((uint64_t)0b1000000000000000000000000000000000000000000000000000000000000000) == 63);
#endif
}


void test_bsr_x64()
{
#ifdef TEST_X64_ASM
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000000) == -1);
  test_assert(x64::bit_scan_reverse((uint64_t)0b1000000000000000000000000000000000000000000000000000000000000000) == 63);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0100000000000000001000000000000000000000000000000000000000000000) == 62);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0010000000000000000100000000000000000000000000000000000000000000) == 61);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0001000000000000000001110000000000000000000100000000000000000000) == 60);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000100000000000000000000011100000000000001000000000000000000000) == 59);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000010000000000000000000000001100000000000000000000000000000000) == 58);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000001000000000000000000000001100000000000100000000000000000000) == 57);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000100000000000000000000000000000000000000000000000000000000) == 56);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000010000000000000000000000000000000000100000000000000000000) == 55);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000001000000000000000000000000000000000000000000000000000001) == 54);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000100000000000000000000000000000000000000000000001000100) == 53);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000010000000000000000000000000000000000000000100000000000) == 52);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000001000000000000000000000000011000000000000000000000000) == 51);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000100000000000000000000000000000000000000000000000111) == 50);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000010000000000000000000000000100000000000000000000000) == 49);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000001000000000000000000000000000000000000000000001000) == 48);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000100000000000000000000001101000000000000000000000) == 47);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000010000000000000000000000001000000000000000000000) == 46);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000001000000000000000000000000001000000000000000000) == 45);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000100000000000000000100000000000000000000000000) == 44);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000010000000000000100000000000000000000000000000) == 43);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000001000000000000000000000000010000000000000000) == 42);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000100000000000000000000000000000100000000000) == 41);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000010000000000000000000000000000000010000000) == 40);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000001000000000000000000000000000001010000000) == 39);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000100000000000000000000000000100000000000) == 38);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000010000000000000000010001000000000000000) == 37);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000001000000000000000010100000000000100000) == 36);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000100000000001000000000000000000001100) == 35);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000010000000001000000000000000000000000) == 34);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000001000000000000100000000000000000000) == 33);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000100000000000000100000000000000000) == 32);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000010000000000000000100000000000000) == 31);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000001000000000010000000000000000000) == 30);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000100000000011010000000000000000) == 29);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000010000000000000000000000000000) == 28);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000001000000000000010001000000000) == 27);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000100000000000000010000000000) == 26);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000010000000001100001000000000) == 25);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000001000000000000000000010000) == 24);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000100000000100010000000000) == 23);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000010000000000000000000010) == 22);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000001000000000000000110000) == 21);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000100000000000001000000) == 20);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000010000000010000000000) == 19);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000001000000000010000000) == 18);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000100000000000001000) == 17);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000010000000000000100) == 16);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000001000000000100000) == 15);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000100000010000000) == 14);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000010000000000000) == 13);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000001000000010100) == 12);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000100001000000) == 11);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000010000100000) == 10);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000001000000100) == 9);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000100000001) == 8);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000010000010) == 7);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000001010000) == 6);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000101000) == 5);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000011000) == 4);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000001000) == 3);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000100) == 2);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000010) == 1);
  test_assert(x64::bit_scan_reverse((uint64_t)0b0000000000000000000000000000000000000000000000000000000000000001) == 0);
#endif
}

int main(int, char **)
{
  test_bsf();
  test_bsf_x64();
  test_bsr();
  return 0;
}
